blueprint:
  name: Window - Heating Control (Open/Close)
  description: >
    Automate your heating system based on window status to improve energy efficiency. 

    ## Features:
      - Temporarily disables heating when a window is opened.
      - Automatically restores heating once the window is closed.
      - Optionally sends real-time notifications to mobile devices with room and temperature details.

    **Note:** Ensure your window sensors and climate devices are properly configured for seamless operation.

    [GitHub Repository](https://github.com/rirethy/WindowHeatingControl)
  domain: automation
  input:
    window_sensor:
      name: Window - Open Sensor
      description: Sensor to detect if the window is open.
      selector:
        entity:
          domain: binary_sensor
    climate_entities:
      name: Heating - Climate Entities
      description: Climate entities to control.
      default: []
      selector:
        entity:
          domain: climate
          multiple: true
    notify_devices:
      name: Notification Devices (optional)
      description: List of mobile devices for notifications. Leave empty to disable notifications.
      default: []
      selector:
        device:
          integration: mobile_app
          multiple: true
    room_name:
      name: Room Name
      description: Name of the room for notifications.
    window_opened_flag:
      name: Window Opened Flag
      description: Input boolean to indicate if the window has been opened.
      selector:
        entity:
          domain: input_boolean
    window_open_duration:
      name: Duration Before Heating Stops (Window Open)
      description: Duration in seconds before turning off heating when the window is open.
      default: 45
      selector:
        number:
          min: 10
          max: 600
          unit_of_measurement: seconds
    window_close_duration:
      name: Duration Before Heating Resumes (Window Closed)
      description: Duration in minutes before resuming heating when the window is closed.
      default: 15
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes

variables:
  room_name: !input room_name
  climate_entities: !input climate_entities
  notify_devices: !input notify_devices
  window_opened_flag: !input window_opened_flag
  current_temperature: "{{ states('sensor.outdoor_temperature') | float }}"
  temperature_unit: "{{ state_attr('sensor.outdoor_temperature', 'unit_of_measurement') }}"
  window_open_duration: !input window_open_duration
  window_close_duration: !input window_close_duration

trigger:
  - platform: state
    entity_id: !input window_sensor
    to: "on"
    for:
      seconds: !input window_open_duration
  - platform: state
    entity_id: !input window_sensor
    to: "off"
    for:
      minutes: !input window_close_duration

condition: []

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input window_sensor
            state: "on"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input window_opened_flag
          - repeat:
              for_each: "{{ climate_entities }}"
              sequence:
                - condition: template
                  value_template: "{{ is_state(repeat.item, 'auto') }}"
                - action: climate.set_hvac_mode
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    hvac_mode: "off"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ notify_devices | length > 0 }}"
                sequence:
                  - repeat:
                        for_each: "{{ notify_devices }}"
                        sequence:
                          - service: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
                            data:
                              title: Heating Management
                              message: >
                                Heating stopped in {{ room_name }}, {{ current_temperature }}{{ temperature_unit }} outside ({{ now().strftime('%H:%M:%S') }})

      - conditions:
          - condition: state
            entity_id: !input window_sensor
            state: "off"
          - condition: state
            entity_id: !input window_opened_flag
            state: "on"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input window_opened_flag
          - repeat:
             for_each: "{{ climate_entities }}"
             sequence:
               - action: climate.set_hvac_mode
                 target:
                   entity_id: "{{ repeat.item }}"
                 data:
                   hvac_mode: "auto"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ notify_devices | length > 0 }}"
                sequence:
                  - repeat:
                      for_each: "{{ notify_devices }}"
                      sequence:
                        - service: "notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}"
                          data:
                            title: Heating Management
                            message: >
                              Heating resumed in {{ room_name }}, {{ current_temperature }}{{ temperature_unit }} outside ({{ now().strftime('%H:%M:%S') }})

mode: single
